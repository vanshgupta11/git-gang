name: Process Contribution

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [master]
  pull_request_review:
    types: [submitted]

concurrency:
  group: contribution-processing-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read
  checks: read
  statuses: write

jobs:
  validate-and-process:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      checks: read
    env:
      PR_NUMBER: ${{ github.event.pull_request.number || github.event.number || 0 }}
      PR_AUTHOR: ${{ github.event.pull_request.user.login || 'unknown' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "18"

      - name: Check only ADD_YOUR_NAME.md is modified
        id: file-check
        run: |
          files_changed=$(git diff --name-only origin/master...${{ github.event.pull_request.head.sha || github.sha }})
          file_count=$(echo "$files_changed" | wc -l)
          files_list=$(echo "$files_changed" | tr '\n' ', ' | sed 's/,/, /g' | sed 's/, $//')

          if [ "$files_changed" = "ADD_YOUR_NAME.md" ] && [ "$file_count" = "1" ]; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "is_contribution=true" >> $GITHUB_OUTPUT
          elif echo "$files_changed" | grep -q "ADD_YOUR_NAME.md"; then
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "is_contribution=true" >> $GITHUB_OUTPUT
            echo "error_message=Only ADD_YOUR_NAME.md should be modified for contributions. Found changes in: $files_list" >> $GITHUB_OUTPUT
          else
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "is_contribution=false" >> $GITHUB_OUTPUT
            echo "error_message=This PR does not appear to be a contribution. No changes to ADD_YOUR_NAME.md found." >> $GITHUB_OUTPUT
          fi

      - name: Link PR to an open contribution issue
        if: steps.file-check.outputs.is_contribution == 'true'
        continue-on-error: true
        run: |
          set +e  # Don't exit on error, we'll handle errors gracefully

          # Get current PR body first
          CURRENT_BODY=$(gh api "repos/${{ github.repository }}/pulls/$PR_NUMBER" --jq '.body // ""' 2>/dev/null)
          if [ $? -ne 0 ]; then
            echo "Warning: Could not fetch PR body, skipping issue linking"
            exit 0
          fi

          # Check if PR body already has closing keywords for a contribution issue
          HAS_CONTRIBUTION_LINK=false
          if echo "$CURRENT_BODY" | grep -qiE '(close[sd]?|fix(e[sd])?|resolve[sd]?) #[0-9]+'; then
            # Extract the issue number
            LINKED_ISSUE=$(echo "$CURRENT_BODY" | grep -oiE '(close[sd]?|fix(e[sd])?|resolve[sd]?) #[0-9]+' | grep -oE '#[0-9]+' | head -1 | tr -d '#')

            # Check if the linked issue has "contribution" label
            LABELS=$(gh api "repos/${{ github.repository }}/issues/$LINKED_ISSUE" --jq '.labels[].name' 2>/dev/null || echo "")
            if echo "$LABELS" | grep -q "contribution"; then
              HAS_CONTRIBUTION_LINK=true
              echo "PR already links to contribution issue #$LINKED_ISSUE"
            fi
          fi

          # Only find and link an issue if no contribution issue is already linked
          if [ "$HAS_CONTRIBUTION_LINK" = false ]; then
            # Get all open contribution issues (sorted oldest first)
            OPEN_ISSUES=$(gh issue list --label "contribution" --state open --json number,createdAt --jq 'sort_by(.createdAt) | .[].number' 2>/dev/null)
            if [ $? -ne 0 ] || [ -z "$OPEN_ISSUES" ]; then
              echo "Warning: Could not fetch open issues or no issues available"
              exit 0
            fi

            # Get all open PRs and their linked issues
            LINKED_ISSUES=$(gh pr list --state open --json body --jq '.[].body' 2>/dev/null | grep -oiE '(close[sd]?|fix(e[sd])?|resolve[sd]?) #[0-9]+' | grep -oE '#[0-9]+' | tr -d '#' | sort -u)

            # Find an unassigned issue
            UNASSIGNED_ISSUE=""
            for issue in $OPEN_ISSUES; do
              if ! echo "$LINKED_ISSUES" | grep -q "^${issue}$"; then
                UNASSIGNED_ISSUE=$issue
                echo "Found unassigned contribution issue: #$UNASSIGNED_ISSUE"
                break
              fi
            done

            if [ -n "$UNASSIGNED_ISSUE" ]; then
              echo "$CURRENT_BODY" > /tmp/pr-body.txt
              echo "" >> /tmp/pr-body.txt
              echo "Resolves #${UNASSIGNED_ISSUE}" >> /tmp/pr-body.txt
              if gh pr edit $PR_NUMBER --body-file /tmp/pr-body.txt 2>/dev/null; then
                echo "Linked PR to unassigned contribution issue #$UNASSIGNED_ISSUE"
              else
                echo "Warning: Could not link issue, but continuing workflow"
              fi
            else
              echo "âš  All contribution issues are already assigned to other PRs"
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Comprehensive validation and profanity check
        id: validate
        if: steps.file-check.outputs.valid == 'true'
        run: node scripts/comprehensive-validation.js || true

      - name: Verify GitHub username matches PR author
        if: steps.file-check.outputs.valid == 'true' && steps.validate.outputs.valid == 'true' && steps.validate.outputs.profanity_detected != 'true'
        id: username-check
        run: |
          ENTRY_USERNAME="${{ steps.validate.outputs.username }}"

          if [ "$PR_AUTHOR" != "$ENTRY_USERNAME" ]; then
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "error=Username mismatch: Your GitHub username is @$PR_AUTHOR but you entered @$ENTRY_USERNAME. Please use your own GitHub username." >> $GITHUB_OUTPUT
            echo "Username validation failed"
          else
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "Username matches PR author"
          fi

      - name: Approve and comment on valid contribution
        if: steps.file-check.outputs.valid == 'true' && steps.validate.outputs.valid == 'true' && steps.validate.outputs.profanity_detected != 'true' && steps.username-check.outputs.valid == 'true'
        run: |
          # Create comment body in temp file to handle special characters
          cat > /tmp/approval-comment.md << 'COMMENT_EOF'
          ## Approved - Ready to Merge

          Your entry looks good:
          ```
          ENTRY_PLACEHOLDER
          ```

          ### Validation Results
          - Format is correct
          - No duplicates found
          - Content looks clean
          - Username matches PR author

          This PR is **approved** and will be automatically merged. Once merged, you'll be added to the [contributors list](https://github.com/SashankBhamidi/git-gang/blob/master/CONTRIBUTORS.md). Welcome to the Git Gang!
COMMENT_EOF

          # Replace placeholders
          sed -i "s|ENTRY_PLACEHOLDER|${{ steps.validate.outputs.entry }}|g" /tmp/approval-comment.md

          gh pr comment $PR_NUMBER --body-file /tmp/approval-comment.md

          # Remove invalid label if it exists (user fixed their entry)
          gh pr edit $PR_NUMBER --remove-label "invalid" 2>/dev/null || true

          # Add approved label
          gh pr edit $PR_NUMBER --add-label "approved"

          # Add Hacktoberfest label if it's October
          CURRENT_MONTH=$(date +%m)
          if [ "$CURRENT_MONTH" = "10" ]; then
            echo "October detected - adding hacktoberfest-accepted label"
            gh pr edit $PR_NUMBER --add-label "hacktoberfest-accepted"
          fi

          # Auto-merge approved contributions
          echo "Auto-merging approved contribution..."
          gh pr merge $PR_NUMBER --squash --auto
          echo "Auto-merge enabled - PR will merge when all checks pass"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Create moderation issue for profanity
        if: steps.validate.outputs.profanity_detected == 'true'
        id: moderation-issue
        run: |
          # Create issue body in temp file to handle special characters
          cat > /tmp/moderation-issue.md << 'ISSUE_EOF'
          Content filter flagged this entry before merge.

          - Entry: ENTRY_PLACEHOLDER
          - Username: @USERNAME_PLACEHOLDER
          - PR: #PR_NUMBER_PLACEHOLDER
          - Name: NAME_PLACEHOLDER
          - Message: MESSAGE_PLACEHOLDER

          Flagged in name: NAME_FLAG_PLACEHOLDER
          Flagged in message: MESSAGE_FLAG_PLACEHOLDER

          Take a look and decide what to do. Approving and merging the PR will automatically close this issue.

          - [ ] Reviewed
          - [ ] Handled
ISSUE_EOF

          # Replace placeholders
          sed -i "s|ENTRY_PLACEHOLDER|${{ steps.validate.outputs.entry }}|g" /tmp/moderation-issue.md
          sed -i "s|USERNAME_PLACEHOLDER|${{ steps.validate.outputs.username }}|g" /tmp/moderation-issue.md
          sed -i "s|PR_NUMBER_PLACEHOLDER|$PR_NUMBER|g" /tmp/moderation-issue.md
          sed -i "s|NAME_PLACEHOLDER|${{ steps.validate.outputs.name }}|g" /tmp/moderation-issue.md
          sed -i "s|MESSAGE_PLACEHOLDER|${{ steps.validate.outputs.message }}|g" /tmp/moderation-issue.md
          sed -i "s|NAME_FLAG_PLACEHOLDER|${{ steps.validate.outputs.profanity_in_name }}|g" /tmp/moderation-issue.md
          sed -i "s|MESSAGE_FLAG_PLACEHOLDER|${{ steps.validate.outputs.profanity_in_message }}|g" /tmp/moderation-issue.md

          # Create issue and capture the issue number
          ISSUE_URL=$(gh issue create --title "Review entry from @${{ steps.validate.outputs.username }}" \
            --body-file /tmp/moderation-issue.md \
            --label "moderation,urgent" \
            --assignee SashankBhamidi)

          ISSUE_NUMBER=$(echo "$ISSUE_URL" | grep -oE '[0-9]+$')
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "Created moderation issue #$ISSUE_NUMBER"

          # Update PR body to link the moderation issue (will auto-close when PR is merged/closed)
          CURRENT_BODY=$(gh api "repos/${{ github.repository }}/pulls/$PR_NUMBER" --jq '.body // ""')
          echo "$CURRENT_BODY" > /tmp/pr-body-update.txt
          echo "" >> /tmp/pr-body-update.txt
          echo "Closes #${ISSUE_NUMBER}" >> /tmp/pr-body-update.txt
          gh pr edit $PR_NUMBER --body-file /tmp/pr-body-update.txt
          echo "Linked moderation issue #$ISSUE_NUMBER to PR #$PR_NUMBER"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Request review for unauthorized file changes
        if: steps.file-check.outputs.valid == 'false' && steps.file-check.outputs.is_contribution == 'true'
        run: |
          gh pr edit $PR_NUMBER --add-reviewer SashankBhamidi
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Handle non-contribution PRs
        if: steps.file-check.outputs.is_contribution == 'false'
        run: |
          gh pr comment $PR_NUMBER --body $'## Not a contribution\n\n**Issue:** ${{ steps.file-check.outputs.error_message }}\n\nIf you meant to add your name, please make sure to edit ADD_YOUR_NAME.md.'
          gh pr edit $PR_NUMBER --add-label "not-a-contribution"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Comment on validation issues
        if: |
          (steps.file-check.outputs.valid == 'false' ||
           steps.validate.outputs.valid == 'false' ||
           steps.validate.outputs.profanity_detected == 'true' ||
           steps.username-check.outputs.valid == 'false') &&
          steps.file-check.outputs.is_contribution == 'true'
        run: |
          if [ "${{ steps.file-check.outputs.valid }}" == "false" ]; then
            cat > /tmp/error-comment.md << 'ERROR_EOF'
            ## Unauthorized File Changes Detected

            **Issue:** ${{ steps.file-check.outputs.error_message }}

            ### What you need to do
            Contributions should **only** modify `ADD_YOUR_NAME.md`. Please:
            1. Remove changes to other files
            2. Keep only your entry in `ADD_YOUR_NAME.md`
            3. Push the update

            This PR has been flagged for manual review.
ERROR_EOF
            gh pr comment $PR_NUMBER --body-file /tmp/error-comment.md
            gh pr edit $PR_NUMBER --add-label "unauthorized"
          elif [ "${{ steps.validate.outputs.valid }}" == "false" ]; then
            # Check if it's a duplicate entry
            if echo "${{ steps.validate.outputs.error_message }}" | grep -q "already been added"; then
              cat > /tmp/duplicate-comment.md << 'DUP_EOF'
              ## Already a Contributor

              Looks like you've already joined the Git Gang - your name is already in the [contributors list](https://github.com/SashankBhamidi/git-gang/blob/master/CONTRIBUTORS.md).

              Thanks for your enthusiasm, but we can only add each person once. We'll keep this PR open, but no new entry will be added.
DUP_EOF
              gh pr comment $PR_NUMBER --body-file /tmp/duplicate-comment.md
              gh pr edit $PR_NUMBER --add-label "duplicate"
            else
              cat > /tmp/fix-comment.md << 'FIX_EOF'
              ## Validation Failed - Fix Required

              There's an issue with your entry:

              **Issue:** ${{ steps.validate.outputs.error_message }}

              ### How to fix
              1. Click on the **Files changed** tab
              2. Click the pencil icon to edit `ADD_YOUR_NAME.md`
              3. Fix the issue mentioned above
              4. Commit the changes

              The validation will run again automatically when you push the update.
FIX_EOF
              gh pr comment $PR_NUMBER --body-file /tmp/fix-comment.md
              gh pr edit $PR_NUMBER --add-label "invalid"
            fi
          elif [ "${{ steps.username-check.outputs.valid }}" == "false" ]; then
            cat > /tmp/username-comment.md << 'USER_EOF'
            ## Username Mismatch

            Your GitHub username is **@$PR_AUTHOR** but you entered **@${{ steps.validate.outputs.username }}**.

            ### How to fix
            Please update your entry in `ADD_YOUR_NAME.md` to use your own GitHub username: **@$PR_AUTHOR**

            You cannot submit entries on behalf of others.
USER_EOF
            gh pr comment $PR_NUMBER --body-file /tmp/username-comment.md
            gh pr edit $PR_NUMBER --add-label "invalid"
          elif [ "${{ steps.validate.outputs.profanity_detected }}" == "true" ]; then
            cat > /tmp/moderation-comment.md << 'MOD_EOF'
            ## Flagged for Manual Review

            Your entry was flagged by our content filter and needs manual review.

            ### What happens next
            - A maintainer will review your entry shortly
            - If approved, your PR will be merged automatically
            - You'll be notified of the decision

            Please be patient while we review. Thank you!
MOD_EOF
            gh pr comment $PR_NUMBER --body-file /tmp/moderation-comment.md
            gh pr edit $PR_NUMBER --add-label "moderation"
          fi
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Report workflow completion
        if: always()
        run: |
          echo "Workflow completed for PR #$PR_NUMBER"
